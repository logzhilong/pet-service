// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.momoplan.pet.domain;

import com.momoplan.pet.domain.AuthenticationToken;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect AuthenticationToken_Roo_Finder {
    
    public static TypedQuery<AuthenticationToken> AuthenticationToken.findAuthenticationTokensByToken(String token) {
        if (token == null || token.length() == 0) throw new IllegalArgumentException("The token argument is required");
        EntityManager em = AuthenticationToken.entityManager();
        TypedQuery<AuthenticationToken> q = em.createQuery("SELECT o FROM AuthenticationToken AS o WHERE o.token = :token", AuthenticationToken.class);
        q.setParameter("token", token);
        return q;
    }
    
    public static TypedQuery<AuthenticationToken> AuthenticationToken.findAuthenticationTokensByUserid(long userid) {
        EntityManager em = AuthenticationToken.entityManager();
        TypedQuery<AuthenticationToken> q = em.createQuery("SELECT o FROM AuthenticationToken AS o WHERE o.userid = :userid", AuthenticationToken.class);
        q.setParameter("userid", userid);
        return q;
    }
    
}
