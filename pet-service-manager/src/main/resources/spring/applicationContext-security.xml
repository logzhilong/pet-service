<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.1.xsd"
	>

    <!-- 密码加密 -->
	<authentication-manager>
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<beans:property name="providers">
			<beans:list>
				<beans:ref local="daoAuthenticationProvider" />
			</beans:list>
		</beans:property>
		<beans:property name="messageSource" ref="messageSource" />
	</beans:bean>
    <beans:bean id="md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
		<beans:property name="encodeHashAsBase64" value="true" />
	</beans:bean>
	<beans:bean id="shaPasswordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg type="int" value="256" />
		<beans:property name="encodeHashAsBase64" value="true" />
	</beans:bean>
	<!-- 加载spring的源文件 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>messages</beans:value>
				<beans:value>classpath:properties/messages_zh_CN.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!--  
	#########################################################################
	# 开发人员关心以下配置 以及实现
	#########################################################################
	-->
	<!--  
	baseSessionInitializationStrategy 自己实现逻辑
	-->
	<beans:bean id="baseSessionInitializationStrategyFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
	    <beans:property name="sessionAuthenticationStrategy" ref="baseSessionInitializationStrategy" />
	    <beans:property name="authenticationManager" ref="authenticationManager" />
  	</beans:bean>
  		
	<!-- 
	配置登录验证的类 
	customUserDetailsService 自己实现逻辑
	-->
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="customUserDetailsService" />
	</beans:bean>
	<!--  
	passwordEncoder 自己实现逻辑
	-->
	<beans:bean id="passwordEncoder" class="com.momoplan.pet.framework.manager.security.Md5PlusShaPasswordEncoder" >
		<beans:constructor-arg ref="md5PasswordEncoder"/>
		<beans:constructor-arg ref="shaPasswordEncoder"/>
	</beans:bean>



	<!-- 静态资源与登录页面不需要控制 -->
    <http pattern="/commons/**" security="none"/>  
    <http pattern="/static/**" security="none"/>      
    <http pattern="/login.html" security="none"/>      
    <http pattern="/login_dialog.html" security="none"/>      
    
	<http use-expressions="true" auto-config="false" access-denied-page="/access_denied.html">
		<!-- 授权所有角色对/ 的访问 -->
		<intercept-url pattern="/" access="permitAll" />
		<!-- 所有页面均需要登录认证 -->
		<intercept-url pattern="/**" access="isAuthenticated()" />
		<form-login login-page="/login.html" login-processing-url="/j_spring_security_check" authentication-failure-url="/login.html" default-target-url="/index.html" />
		<logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.html" />
		<custom-filter after="FORM_LOGIN_FILTER" ref="baseSessionInitializationStrategyFilter" />
		<session-management session-authentication-strategy-ref="baseSessionInitializationStrategy"/>
	</http>
	
</beans:beans>

